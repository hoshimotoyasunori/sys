import {
  Presence,
  Primitive,
  _extends,
  composeEventHandlers,
  composeRefs,
  createContext,
  createContextScope,
  useCallbackRef,
  useComposedRefs,
  useControllableState,
  useId,
  useLayoutEffect
} from "./chunk-P5SURUXD.js";
import {
  Combination_default,
  hideOthers
} from "./chunk-XHLTOE5L.js";
import {
  require_react_dom
} from "./chunk-WALXKXZM.js";
import {
  require_react
} from "./chunk-WQMOH32Y.js";
import {
  __toESM
} from "./chunk-5WWUZCGV.js";

// node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-slot/dist/index.module.js
var t = __toESM(require_react());
var Slot = t.forwardRef((e3, o5) => {
  const { children: a2, ...s2 } = e3;
  return t.Children.toArray(a2).some(l) ? t.createElement(t.Fragment, null, t.Children.map(a2, (e4) => l(e4) ? t.createElement(n, _extends({}, s2, { ref: o5 }), e4.props.children) : e4)) : t.createElement(n, _extends({}, s2, { ref: o5 }), a2);
});
Slot.displayName = "Slot";
var n = t.forwardRef((r3, n3) => {
  const { children: l2, ...a2 } = r3;
  return t.isValidElement(l2) ? t.cloneElement(l2, { ...o(a2, l2.props), ref: composeRefs(n3, l2.ref) }) : t.Children.count(l2) > 1 ? t.Children.only(null) : null;
});
n.displayName = "SlotClone";
var Slottable = ({ children: e3 }) => t.createElement(t.Fragment, null, e3);
function l(e3) {
  return t.isValidElement(e3) && e3.type === Slottable;
}
function o(e3, t5) {
  const r3 = { ...t5 };
  for (const n3 in t5) {
    const l2 = e3[n3], o5 = t5[n3];
    /^on[A-Z]/.test(n3) ? r3[n3] = (...e4) => {
      null == o5 || o5(...e4), null == l2 || l2(...e4);
    } : "style" === n3 ? r3[n3] = { ...l2, ...o5 } : "className" === n3 && (r3[n3] = [l2, o5].filter(Boolean).join(" "));
  }
  return { ...e3, ...r3 };
}

// node_modules/@radix-ui/react-focus-guards/dist/index.module.js
var e = __toESM(require_react());
var t2 = 0;
function useFocusGuards() {
  e.useEffect(() => {
    var e3, n3;
    const r3 = document.querySelectorAll("[data-radix-focus-guard]");
    return document.body.insertAdjacentElement("afterbegin", null !== (e3 = r3[0]) && void 0 !== e3 ? e3 : o2()), document.body.insertAdjacentElement("beforeend", null !== (n3 = r3[1]) && void 0 !== n3 ? n3 : o2()), t2++, () => {
      1 === t2 && document.querySelectorAll("[data-radix-focus-guard]").forEach((e4) => e4.remove()), t2--;
    };
  }, []);
}
function o2() {
  const e3 = document.createElement("span");
  return e3.setAttribute("data-radix-focus-guard", ""), e3.tabIndex = 0, e3.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none", e3;
}

// node_modules/@radix-ui/react-portal/dist/index.module.js
var import_react_dom = __toESM(require_react_dom());
var r = __toESM(require_react());
var Portal = r.forwardRef((a2, i3) => {
  var n3, d3;
  const { containerRef: s2, style: u2, ...c3 } = a2, m2 = null !== (n3 = null == s2 ? void 0 : s2.current) && void 0 !== n3 ? n3 : null === globalThis || void 0 === globalThis || null === (d3 = globalThis.document) || void 0 === d3 ? void 0 : d3.body, [, f2] = r.useState({});
  return useLayoutEffect(() => {
    f2({});
  }, []), m2 ? import_react_dom.default.createPortal(r.createElement(Primitive.div, _extends({ "data-radix-portal": "" }, c3, { ref: i3, style: m2 === document.body ? { position: "absolute", top: 0, left: 0, zIndex: 2147483647, ...u2 } : void 0 })), m2) : null;
});
var UnstablePortal = r.forwardRef((t5, a2) => {
  var i3;
  const { container: n3 = null === globalThis || void 0 === globalThis || null === (i3 = globalThis.document) || void 0 === i3 ? void 0 : i3.body, ...d3 } = t5;
  return n3 ? import_react_dom.default.createPortal(r.createElement(Primitive.div, _extends({}, d3, { ref: a2 })), n3) : null;
});

// node_modules/@radix-ui/react-focus-scope/dist/index.module.js
var o3 = __toESM(require_react());
var c = { bubbles: false, cancelable: true };
var FocusScope = o3.forwardRef((i3, f2) => {
  const { loop: l2 = false, trapped: m2 = false, onMountAutoFocus: p, onUnmountAutoFocus: v2, ...E2 } = i3, [F2, S] = o3.useState(null), b2 = useCallbackRef(p), T = useCallbackRef(v2), y = o3.useRef(null), L = useComposedRefs(f2, (e3) => S(e3)), h2 = o3.useRef({ paused: false, pause() {
    this.paused = true;
  }, resume() {
    this.paused = false;
  } }).current;
  o3.useEffect(() => {
    if (m2) {
      let e3 = function(e4) {
        if (h2.paused || !F2)
          return;
        const t6 = e4.target;
        F2.contains(t6) ? y.current = t6 : a(y.current, { select: true });
      }, t5 = function(e4) {
        !h2.paused && F2 && (F2.contains(e4.relatedTarget) || a(y.current, { select: true }));
      };
      return document.addEventListener("focusin", e3), document.addEventListener("focusout", t5), () => {
        document.removeEventListener("focusin", e3), document.removeEventListener("focusout", t5);
      };
    }
  }, [m2, F2, h2.paused]), o3.useEffect(() => {
    if (F2) {
      d.add(h2);
      const t5 = document.activeElement;
      if (!F2.contains(t5)) {
        const n3 = new Event("focusScope.autoFocusOnMount", c);
        F2.addEventListener("focusScope.autoFocusOnMount", b2), F2.dispatchEvent(n3), n3.defaultPrevented || (!function(e4, { select: t6 = false } = {}) {
          const n4 = document.activeElement;
          for (const o5 of e4)
            if (a(o5, { select: t6 }), document.activeElement !== n4)
              return;
        }((e3 = r2(F2), e3.filter((e4) => "A" !== e4.tagName)), { select: true }), document.activeElement === t5 && a(F2));
      }
      return () => {
        F2.removeEventListener("focusScope.autoFocusOnMount", b2), setTimeout(() => {
          const e4 = new Event("focusScope.autoFocusOnUnmount", c);
          F2.addEventListener("focusScope.autoFocusOnUnmount", T), F2.dispatchEvent(e4), e4.defaultPrevented || a(null != t5 ? t5 : document.body, { select: true }), F2.removeEventListener("focusScope.autoFocusOnUnmount", T), d.remove(h2);
        }, 0);
      };
    }
    var e3;
  }, [F2, b2, T, h2]);
  const N = o3.useCallback((e3) => {
    if (!l2 && !m2)
      return;
    if (h2.paused)
      return;
    const t5 = "Tab" === e3.key && !e3.altKey && !e3.ctrlKey && !e3.metaKey, n3 = document.activeElement;
    if (t5 && n3) {
      const t6 = e3.currentTarget, [o5, u2] = function(e4) {
        const t7 = r2(e4), n4 = s(t7, e4), o6 = s(t7.reverse(), e4);
        return [n4, o6];
      }(t6);
      o5 && u2 ? e3.shiftKey || n3 !== u2 ? e3.shiftKey && n3 === o5 && (e3.preventDefault(), l2 && a(u2, { select: true })) : (e3.preventDefault(), l2 && a(o5, { select: true })) : n3 === t6 && e3.preventDefault();
    }
  }, [l2, m2, h2.paused]);
  return o3.createElement(Primitive.div, _extends({ tabIndex: -1 }, E2, { ref: L, onKeyDown: N }));
});
function r2(e3) {
  const t5 = [], n3 = document.createTreeWalker(e3, NodeFilter.SHOW_ELEMENT, { acceptNode: (e4) => {
    const t6 = "INPUT" === e4.tagName && "hidden" === e4.type;
    return e4.disabled || e4.hidden || t6 ? NodeFilter.FILTER_SKIP : e4.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
  } });
  for (; n3.nextNode(); )
    t5.push(n3.currentNode);
  return t5;
}
function s(e3, t5) {
  for (const n3 of e3)
    if (!i(n3, { upTo: t5 }))
      return n3;
}
function i(e3, { upTo: t5 }) {
  if ("hidden" === getComputedStyle(e3).visibility)
    return true;
  for (; e3; ) {
    if (void 0 !== t5 && e3 === t5)
      return false;
    if ("none" === getComputedStyle(e3).display)
      return true;
    e3 = e3.parentElement;
  }
  return false;
}
function a(e3, { select: t5 = false } = {}) {
  if (e3 && e3.focus) {
    const n3 = document.activeElement;
    e3.focus({ preventScroll: true }), e3 !== n3 && function(e4) {
      return e4 instanceof HTMLInputElement && "select" in e4;
    }(e3) && t5 && e3.select();
  }
}
var d = function() {
  let e3 = [];
  return { add(t5) {
    const n3 = e3[0];
    t5 !== n3 && (null == n3 || n3.pause()), e3 = f(e3, t5), e3.unshift(t5);
  }, remove(t5) {
    var n3;
    e3 = f(e3, t5), null === (n3 = e3[0]) || void 0 === n3 || n3.resume();
  } };
}();
function f(e3, t5) {
  const n3 = [...e3], o5 = n3.indexOf(t5);
  return -1 !== o5 && n3.splice(o5, 1), n3;
}

// node_modules/@radix-ui/react-use-escape-keydown/dist/index.module.js
var t3 = __toESM(require_react());
function useEscapeKeydown(n3) {
  const o5 = useCallbackRef(n3);
  t3.useEffect(() => {
    const e3 = (e4) => {
      "Escape" === e4.key && o5(e4);
    };
    return document.addEventListener("keydown", e3), () => document.removeEventListener("keydown", e3);
  }, [o5]);
}

// node_modules/@radix-ui/react-use-body-pointer-events/dist/index.module.js
var t4 = __toESM(require_react());
var n2;
var o4 = 0;
function useBodyPointerEvents({ disabled: r3 }) {
  const i3 = t4.useRef(false);
  useLayoutEffect(() => {
    if (r3) {
      let e3 = function() {
        o4--, 0 === o4 && (document.body.style.pointerEvents = n2);
      }, t5 = function(e4) {
        i3.current = "mouse" !== e4.pointerType;
      };
      return 0 === o4 && (n2 = document.body.style.pointerEvents), document.body.style.pointerEvents = "none", o4++, document.addEventListener("pointerup", t5), () => {
        i3.current ? document.addEventListener("click", e3, { once: true }) : e3(), document.removeEventListener("pointerup", t5);
      };
    }
  }, [r3]);
}

// node_modules/@radix-ui/react-dismissable-layer/dist/index.module.js
var i2 = __toESM(require_react());
var u = i2.createContext({ layers: /* @__PURE__ */ new Set(), layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(), branches: /* @__PURE__ */ new Set() });
var DismissableLayer = i2.forwardRef((l2, m2) => {
  const { disableOutsidePointerEvents: f2 = false, onEscapeKeyDown: p, onPointerDownOutside: v2, onFocusOutside: b2, onInteractOutside: E2, onDismiss: y, ...w2 } = l2, h2 = i2.useContext(u), [D, x2] = i2.useState(null), [, C2] = i2.useState({}), L = useComposedRefs(m2, (e3) => x2(e3)), P = Array.from(h2.layers), [O2] = [...h2.layersWithOutsidePointerEventsDisabled].slice(-1), g = P.indexOf(O2), B = D ? P.indexOf(D) : -1, R2 = h2.layersWithOutsidePointerEventsDisabled.size > 0, F2 = B >= g, S = function(e3) {
    const n3 = useCallbackRef(e3), r3 = i2.useRef(false);
    return i2.useEffect(() => {
      const e4 = (e5) => {
        if (e5.target && !r3.current) {
          d2("dismissableLayer.pointerDownOutside", n3, { originalEvent: e5 });
        }
        r3.current = false;
      }, t5 = window.setTimeout(() => {
        document.addEventListener("pointerdown", e4);
      }, 0);
      return () => {
        window.clearTimeout(t5), document.removeEventListener("pointerdown", e4);
      };
    }, [n3]), { onPointerDownCapture: () => r3.current = true };
  }((e3) => {
    const t5 = e3.target, n3 = [...h2.branches].some((e4) => e4.contains(t5));
    F2 && !n3 && (null == v2 || v2(e3), null == E2 || E2(e3), e3.defaultPrevented || null == y || y());
  }), W = function(e3) {
    const n3 = useCallbackRef(e3), r3 = i2.useRef(false);
    return i2.useEffect(() => {
      const e4 = (e5) => {
        if (e5.target && !r3.current) {
          d2("dismissableLayer.focusOutside", n3, { originalEvent: e5 });
        }
      };
      return document.addEventListener("focusin", e4), () => document.removeEventListener("focusin", e4);
    }, [n3]), { onFocusCapture: () => r3.current = true, onBlurCapture: () => r3.current = false };
  }((e3) => {
    const t5 = e3.target;
    [...h2.branches].some((e4) => e4.contains(t5)) || (null == b2 || b2(e3), null == E2 || E2(e3), e3.defaultPrevented || null == y || y());
  });
  return useEscapeKeydown((e3) => {
    B === h2.layers.size - 1 && (null == p || p(e3), e3.defaultPrevented || null == y || y());
  }), useBodyPointerEvents({ disabled: f2 }), i2.useEffect(() => {
    D && (f2 && h2.layersWithOutsidePointerEventsDisabled.add(D), h2.layers.add(D), c2());
  }, [D, f2, h2]), i2.useEffect(() => () => {
    D && (h2.layers.delete(D), h2.layersWithOutsidePointerEventsDisabled.delete(D), c2());
  }, [D, h2]), i2.useEffect(() => {
    const e3 = () => C2({});
    return document.addEventListener("dismissableLayer.update", e3), () => document.removeEventListener("dismissableLayer.update", e3);
  }, []), i2.createElement(Primitive.div, _extends({}, w2, { ref: L, style: { pointerEvents: R2 ? F2 ? "auto" : "none" : void 0, ...l2.style }, onFocusCapture: composeEventHandlers(l2.onFocusCapture, W.onFocusCapture), onBlurCapture: composeEventHandlers(l2.onBlurCapture, W.onBlurCapture), onPointerDownCapture: composeEventHandlers(l2.onPointerDownCapture, S.onPointerDownCapture) }));
});
var DismissableLayerBranch = i2.forwardRef((e3, t5) => {
  const n3 = i2.useContext(u), o5 = i2.useRef(null), c3 = useComposedRefs(t5, o5);
  return i2.useEffect(() => {
    const e4 = o5.current;
    if (e4)
      return n3.branches.add(e4), () => {
        n3.branches.delete(e4);
      };
  }, [n3.branches]), i2.createElement(Primitive.div, _extends({}, e3, { ref: c3 }));
});
function c2() {
  const e3 = new Event("dismissableLayer.update");
  document.dispatchEvent(e3);
}
function d2(e3, t5, n3) {
  const r3 = n3.originalEvent.target, s2 = new CustomEvent(e3, { bubbles: false, cancelable: true, detail: n3 });
  return t5 && r3.addEventListener(e3, t5, { once: true }), !r3.dispatchEvent(s2);
}

// node_modules/@radix-ui/react-dialog/dist/index.module.js
var m = __toESM(require_react());
var [x, C] = createContextScope("Dialog");
var [v, E] = x("Dialog");
var Dialog = (e3) => {
  const { __scopeDialog: o5, children: t5, open: r3, defaultOpen: n3, onOpenChange: a2, modal: i3 = true, allowPinchZoom: l2 } = e3, c3 = m.useRef(null), p = m.useRef(null), [d3 = false, f2] = useControllableState({ prop: r3, defaultProp: n3, onChange: a2 });
  return m.createElement(v, { scope: o5, triggerRef: c3, contentRef: p, contentId: useId(), titleId: useId(), descriptionId: useId(), open: d3, onOpenChange: f2, onOpenToggle: m.useCallback(() => f2((e4) => !e4), [f2]), modal: i3, allowPinchZoom: l2 }, t5);
};
var DialogTrigger = m.forwardRef((e3, o5) => {
  const { __scopeDialog: t5, ...r3 } = e3, a2 = E("DialogTrigger", t5), i3 = useComposedRefs(o5, a2.triggerRef);
  return m.createElement(Primitive.button, _extends({ type: "button", "aria-haspopup": "dialog", "aria-expanded": a2.open, "aria-controls": a2.contentId, "data-state": b(a2.open) }, r3, { ref: i3, onClick: composeEventHandlers(e3.onClick, a2.onOpenToggle) }));
});
var DialogPortal = (e3) => {
  const { __scopeDialog: o5, forceMount: t5, children: r3, container: n3 } = e3, l2 = E("DialogPortal", o5);
  return m.createElement(m.Fragment, null, m.Children.map(r3, (e4) => m.createElement(Presence, { present: t5 || l2.open }, m.createElement(UnstablePortal, { asChild: true, container: n3 }, e4))));
};
var DialogOverlay = m.forwardRef((e3, o5) => {
  const { forceMount: t5, ...r3 } = e3, n3 = E("DialogOverlay", e3.__scopeDialog);
  return n3.modal ? m.createElement(Presence, { present: t5 || n3.open }, m.createElement(R, _extends({}, r3, { ref: o5 }))) : null;
});
var R = m.forwardRef((o5, r3) => {
  const { __scopeDialog: a2, ...i3 } = o5, l2 = E("DialogOverlay", a2);
  return m.createElement(Combination_default, { as: Slot, allowPinchZoom: l2.allowPinchZoom, shards: [l2.contentRef] }, m.createElement(Primitive.div, _extends({ "data-state": b(l2.open) }, i3, { ref: r3, style: { pointerEvents: "auto", ...i3.style } })));
});
var DialogContent = m.forwardRef((e3, o5) => {
  const { forceMount: t5, ...r3 } = e3, n3 = E("DialogContent", e3.__scopeDialog);
  return m.createElement(Presence, { present: t5 || n3.open }, n3.modal ? m.createElement(_, _extends({}, r3, { ref: o5 })) : m.createElement(O, _extends({}, r3, { ref: o5 })));
});
var _ = m.forwardRef((e3, t5) => {
  const r3 = E("DialogContent", e3.__scopeDialog), n3 = m.useRef(null), a2 = useComposedRefs(t5, r3.contentRef, n3);
  return m.useEffect(() => {
    const e4 = n3.current;
    if (e4)
      return hideOthers(e4);
  }, []), m.createElement(h, _extends({}, e3, { ref: a2, trapFocus: r3.open, disableOutsidePointerEvents: true, onCloseAutoFocus: composeEventHandlers(e3.onCloseAutoFocus, (e4) => {
    var o5;
    e4.preventDefault(), null === (o5 = r3.triggerRef.current) || void 0 === o5 || o5.focus();
  }), onPointerDownOutside: composeEventHandlers(e3.onPointerDownOutside, (e4) => {
    const o5 = e4.detail.originalEvent, t6 = 0 === o5.button && true === o5.ctrlKey;
    (2 === o5.button || t6) && e4.preventDefault();
  }), onFocusOutside: composeEventHandlers(e3.onFocusOutside, (e4) => e4.preventDefault()) }));
});
var O = m.forwardRef((e3, o5) => {
  const t5 = E("DialogContent", e3.__scopeDialog), r3 = m.useRef(false);
  return m.createElement(h, _extends({}, e3, { ref: o5, trapFocus: false, disableOutsidePointerEvents: false, onCloseAutoFocus: (o6) => {
    var n3, a2;
    (null === (n3 = e3.onCloseAutoFocus) || void 0 === n3 || n3.call(e3, o6), o6.defaultPrevented) || (r3.current || null === (a2 = t5.triggerRef.current) || void 0 === a2 || a2.focus(), o6.preventDefault());
    r3.current = false;
  }, onInteractOutside: (o6) => {
    var n3, a2;
    null === (n3 = e3.onInteractOutside) || void 0 === n3 || n3.call(e3, o6), o6.defaultPrevented || (r3.current = true);
    const i3 = o6.target;
    (null === (a2 = t5.triggerRef.current) || void 0 === a2 ? void 0 : a2.contains(i3)) && o6.preventDefault();
  } }));
});
var h = m.forwardRef((e3, o5) => {
  const { __scopeDialog: t5, trapFocus: n3, onOpenAutoFocus: a2, onCloseAutoFocus: i3, ...s2 } = e3, u2 = E("DialogContent", t5), p = m.useRef(null), d3 = useComposedRefs(o5, p);
  return useFocusGuards(), m.createElement(m.Fragment, null, m.createElement(FocusScope, { asChild: true, loop: true, trapped: n3, onMountAutoFocus: a2, onUnmountAutoFocus: i3 }, m.createElement(DismissableLayer, _extends({ role: "dialog", id: u2.contentId, "aria-describedby": u2.descriptionId, "aria-labelledby": u2.titleId, "data-state": b(u2.open) }, s2, { ref: d3, onDismiss: () => u2.onOpenChange(false) }))), false);
});
var DialogTitle = m.forwardRef((e3, o5) => {
  const { __scopeDialog: t5, ...r3 } = e3, a2 = E("DialogTitle", t5);
  return m.createElement(Primitive.h2, _extends({ id: a2.titleId }, r3, { ref: o5 }));
});
var DialogDescription = m.forwardRef((e3, o5) => {
  const { __scopeDialog: t5, ...r3 } = e3, a2 = E("DialogDescription", t5);
  return m.createElement(Primitive.p, _extends({ id: a2.descriptionId }, r3, { ref: o5 }));
});
var DialogClose = m.forwardRef((e3, o5) => {
  const { __scopeDialog: t5, ...r3 } = e3, a2 = E("DialogClose", t5);
  return m.createElement(Primitive.button, _extends({ type: "button" }, r3, { ref: o5, onClick: composeEventHandlers(e3.onClick, () => a2.onOpenChange(false)) }));
});
function b(e3) {
  return e3 ? "open" : "closed";
}
var [w, F] = createContext("DialogTitleWarning", { contentName: "DialogContent", titleName: "DialogTitle", docsSlug: "dialog" });
var Root = Dialog;
var Trigger = DialogTrigger;
var Portal2 = DialogPortal;
var Overlay = DialogOverlay;
var Content = DialogContent;
var Title = DialogTitle;
var Description = DialogDescription;
var Close = DialogClose;
export {
  Close,
  Content,
  Description,
  Dialog,
  DialogClose,
  DialogContent,
  DialogDescription,
  DialogOverlay,
  DialogPortal,
  DialogTitle,
  DialogTrigger,
  Overlay,
  Portal2 as Portal,
  Root,
  Title,
  Trigger,
  w as WarningProvider,
  C as createDialogScope
};
//# sourceMappingURL=@radix-ui_react-dialog.js.map
